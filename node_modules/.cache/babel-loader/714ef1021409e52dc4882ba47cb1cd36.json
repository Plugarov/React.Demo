{"ast":null,"code":"var _jsxFileName = \"/home/johnsmith/Source/Apps/reactdemo/src/components/FormMain.tsx\";\nimport React, { useRef } from 'react';\nexport const FormMain = props => {\n  const ref = useRef(null);\n\n  const keyPressHandler = event => {\n    if (event.key === \"Enter\") {\n      props.onAdd(ref.current.value);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"input-field mt2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    placeholder: \"Placeholder\",\n    ref: ref,\n    onKeyPress: keyPressHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"title\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Placeholder\"));\n};","map":{"version":3,"sources":["/home/johnsmith/Source/Apps/reactdemo/src/components/FormMain.tsx"],"names":["React","useRef","FormMain","props","ref","keyPressHandler","event","key","onAdd","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAMA,OAAO,MAAMC,QAAiC,GAAGC,KAAK,IACtD;AAII,QAAMC,GAAG,GAAGH,MAAM,CAAmB,IAAnB,CAAlB;;AAEA,QAAMI,eAAe,GAAIC,KAAD,IAAgC;AACpD,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBJ,MAAAA,KAAK,CAACK,KAAN,CAAYJ,GAAG,CAACK,OAAJ,CAAaC,KAAzB;AACH;AACJ,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,EAAE,EAAC,OAFH;AAGA,IAAA,WAAW,EAAC,aAHZ;AAIA,IAAA,GAAG,EAAIN,GAJP;AAKA,IAAA,UAAU,EAAIC,eALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CADJ;AAWH,CAxBM","sourcesContent":["import React, { useRef } from 'react'\n\ninterface FormMainProps {\n    onAdd(title:string): void\n} \n\nexport const FormMain: React.FC<FormMainProps> = props =>\n{\n\n\n\n    const ref = useRef<HTMLInputElement>(null)\n\n    const keyPressHandler = (event: React.KeyboardEvent) => {\n        if(event.key === \"Enter\"){\n            props.onAdd(ref.current!.value);\n        }\n    }\n\n    return (\n        <div className=\"input-field mt2\">\n            <input \n            type=\"text\" \n            id=\"title\" \n            placeholder=\"Placeholder\"\n            ref = {ref}\n            onKeyPress = {keyPressHandler} />\n            <label htmlFor=\"title\" className=\"active\">Placeholder</label>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}